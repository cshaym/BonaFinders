@model BonaFinders.Models.UnethicalModels.UCreate

@{ViewBag.Title = "Create";}
@{<img class="imageBG" src="~/Content/assets/greenblur.PNG">}

<div class="body-content form-style">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h2 class="heading-font">Create an Unethical Organization</h2>

            <div class="form-content">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group bold-main-font">
                    @Html.LabelFor(model => model.UnethicalOrganizationName, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.UnethicalOrganizationName, new { htmlAttributes = new { @class = "form-control col-form-label" } })
                        @Html.ValidationMessageFor(model => model.UnethicalOrganizationName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group bold-main-font">
                    @Html.LabelFor(model => model.FastFashion, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        <div class="checkbox check">
                            @Html.EditorFor(model => model.FastFashion)
                            @Html.ValidationMessageFor(model => model.FastFashion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group bold-main-font">
                    @Html.LabelFor(model => model.Exploitation, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        <div class="checkbox check">
                            @Html.EditorFor(model => model.Exploitation)
                            @Html.ValidationMessageFor(model => model.Exploitation, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group bold-main-font">
                    @Html.LabelFor(model => model.Sweatshop, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        <div class="checkbox check">
                            @Html.EditorFor(model => model.Sweatshop)
                            @Html.ValidationMessageFor(model => model.Sweatshop, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group bold-main-font">
                    @Html.LabelFor(model => model.Copyright, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        <div class="checkbox-create">
                            @Html.EditorFor(model => model.Copyright)
                            @Html.ValidationMessageFor(model => model.Copyright, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group bold-main-font">
                    @Html.LabelFor(model => model.UCountry, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.UCountry, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UCountry, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group bold-main-font">
                    @Html.LabelFor(model => model.UImprove, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.UImprove, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UImprove, "", new { @class = "text-danger" })
                    </div>
                </div>

                @if (User.Identity.IsAuthenticated) { 
                <div class="form-group bold-main-font">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>}
            </div>
        </div>
    }

    <div class="bold-main-font shadow-text">
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>